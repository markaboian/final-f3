{"ast":null,"code":"import _slicedToArray from \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx\";\nimport React, { createContext, useReducer } from \"react\";\nexport var ContextGlobal = createContext({});\nexport var ContextProvider = function ContextProvider(_ref) {\n  var children = _ref.children;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  var initialState = {\n    theme: \"light\",\n    data: []\n  };\n  var _useReducer = useReducer(handleDispatch, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return /*#__PURE__*/React.createElement(ContextGlobal.Provider, {\n    value: {\n      value: value\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useReducer","ContextGlobal","ContextProvider","_ref","children","initialState","theme","data","_useReducer","handleDispatch","_useReducer2","_slicedToArray","state","dispatch","value","createElement","Provider","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nexport const ContextGlobal = createContext({});\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const initialState = {\n    theme: \"light\",\n    data: []\n  }\n  \n  const [state, dispatch] = useReducer(handleDispatch, initialState)\n\n  const value = {\n    state,\n    dispatch\n  }\n\n  return (\n    <ContextGlobal.Provider value={{value}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAExD,OAAO,IAAMC,aAAa,GAAGF,aAAa,CAAC,CAAC,CAAC,CAAC;AAE9C,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACxC;;EAEA,IAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EAAA,IAAAC,WAAA,GAEyBR,UAAU,CAACS,cAAc,EAAEJ,YAAY,CAAC;IAAAK,YAAA,GAAAC,cAAA,CAAAH,WAAA;IAA3DI,KAAK,GAAAF,YAAA;IAAEG,QAAQ,GAAAH,YAAA;EAEtB,IAAMI,KAAK,GAAG;IACZF,KAAK,EAALA,KAAK;IACLC,QAAQ,EAARA;EACF,CAAC;EAED,oBACEf,KAAA,CAAAiB,aAAA,CAACd,aAAa,CAACe,QAAQ;IAACF,KAAK,EAAE;MAACA,KAAK,EAALA;IAAK,CAAE;IAAAG,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpCnB,QAAQ,CACc;AAE7B,CAAC"},"metadata":{},"sourceType":"module"}