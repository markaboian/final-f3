{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx\";\nimport React, { createContext } from \"react\";\nexport var ContextGlobal = createContext({});\nexport var ContextProvider = function ContextProvider(_ref) {\n  var children = _ref.children;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  var initialState = {\n    theme: \"light\",\n    data: []\n  };\n  return /*#__PURE__*/React.createElement(ContextGlobal.Provider, {\n    value: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","ContextGlobal","ContextProvider","_ref","children","initialState","theme","data","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext } from \"react\";\n\nexport const ContextGlobal = createContext({});\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const initialState = {\n    theme: \"light\",\n    data: []\n  }\n\n  return (\n    <ContextGlobal.Provider value={{}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAE5C,OAAO,IAAMC,aAAa,GAAGD,aAAa,CAAC,CAAC,CAAC,CAAC;AAE9C,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACxC;;EAEA,IAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EAED,oBACER,KAAA,CAAAS,aAAA,CAACP,aAAa,CAACQ,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAE;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/Bb,QAAQ,CACc;AAE7B,CAAC"},"metadata":{},"sourceType":"module"}