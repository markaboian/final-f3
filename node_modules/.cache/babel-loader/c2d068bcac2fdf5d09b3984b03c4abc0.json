{"ast":null,"code":"import _slicedToArray from \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _this = this,\n  _jsxFileName = \"/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx\";\nimport React, { createContext, useReducer } from \"react\";\nexport var ContextGlobal = createContext({});\nvar handleDispatch = function handleDispatch(state, _ref) {\n  var type = _ref.type,\n    payload = _ref.payload;\n  switch (type) {\n    case \"LOGGED\":\n      sessionStorage.setItem(\"logged\", JSON.stringify(\"yes\"));\n      return _objectSpread({}, state, {\n        isLogged: true\n      });\n    case \"LOGOUT\":\n      sessionStorage.clear();\n      return _objectSpread({}, state, {\n        isLogged: false\n      });\n    case \"DARK\":\n      localStorage.setItem(\"theme\", JSON.stringify(\"dark\"));\n      return _objectSpread({}, state, {\n        theme: \"dark\"\n      });\n    case \"FAVS\":\n      return _objectSpread({}, state, {\n        data: [].concat(_toConsumableArray(state.data), [payload])\n      });\n    default:\n      return state;\n  }\n};\nexport var ContextProvider = function ContextProvider(_ref2) {\n  var children = _ref2.children;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  var initialState = {\n    isLogged: !!sessionStorage.getItem(\"logged\"),\n    theme: \"\",\n    data: []\n  };\n  var _useReducer = useReducer(handleDispatch, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  console.log(state.data);\n  var propiedades = {\n    state: state,\n    dispatch: dispatch\n  };\n  return /*#__PURE__*/React.createElement(ContextGlobal.Provider, {\n    value: propiedades,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useReducer","ContextGlobal","handleDispatch","state","_ref","type","payload","sessionStorage","setItem","JSON","stringify","_objectSpread","isLogged","clear","localStorage","theme","data","concat","_toConsumableArray","ContextProvider","_ref2","children","initialState","getItem","_useReducer","_useReducer2","_slicedToArray","dispatch","console","log","propiedades","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/markaboian/Desktop/Certified Tech Developer/Frontend 3/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nexport const ContextGlobal = createContext({});\n\nconst handleDispatch = (state, { type, payload }) => {\n\tswitch (type) {\n\t\tcase \"LOGGED\":\n\t\t\tsessionStorage.setItem(\"logged\", JSON.stringify(\"yes\"))\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLogged: true\n\t\t\t}\n\n\t\tcase \"LOGOUT\":\n\t\t\tsessionStorage.clear()\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLogged: false\n\t\t\t}\n\n\n\t\tcase \"DARK\":\n\t\t\tlocalStorage.setItem(\"theme\", JSON.stringify(\"dark\"))\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttheme: \"dark\"\n\t\t\t}\n\n\t\tcase \"FAVS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: [...state.data, payload]\n\t\t\t}\t\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const ContextProvider = ({ children }) => {\n\t//Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n\tconst initialState = {\n\t\tisLogged: !!sessionStorage.getItem(\"logged\"),\n\t\ttheme: \"\",\n\t\tdata: []\n\t}\n\n\tconst [state, dispatch] = useReducer(handleDispatch, initialState)\n\n\tconsole.log(state.data)\n\n\tconst propiedades = {\n\t\tstate,\n\t\tdispatch\n\t}\n\n\treturn (\n\t\t<ContextGlobal.Provider value={propiedades}>\n\t\t\t{children}\n\t\t</ContextGlobal.Provider>\n\t);\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAExD,OAAO,IAAMC,aAAa,GAAGF,aAAa,CAAC,CAAC,CAAC,CAAC;AAE9C,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAAC,IAAA,EAAwB;EAAA,IAApBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAC7C,QAAQD,IAAI;IACX,KAAK,QAAQ;MACZE,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC,CAAC;MACvD,OAAAC,aAAA,KACIR,KAAK;QACRS,QAAQ,EAAE;MAAI;IAGhB,KAAK,QAAQ;MACZL,cAAc,CAACM,KAAK,EAAE;MACtB,OAAAF,aAAA,KACIR,KAAK;QACRS,QAAQ,EAAE;MAAK;IAIjB,KAAK,MAAM;MACVE,YAAY,CAACN,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC;MACrD,OAAAC,aAAA,KACIR,KAAK;QACRY,KAAK,EAAE;MAAM;IAGf,KAAK,MAAM;MACV,OAAAJ,aAAA,KACIR,KAAK;QACRa,IAAI,KAAAC,MAAA,CAAAC,kBAAA,CAAMf,KAAK,CAACa,IAAI,IAAEV,OAAO;MAAC;IAGhC;MACC,OAAOH,KAAK;EAAC;AAEhB,CAAC;AAED,OAAO,IAAMgB,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,KAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;EACzC;;EAEA,IAAMC,YAAY,GAAG;IACpBV,QAAQ,EAAE,CAAC,CAACL,cAAc,CAACgB,OAAO,CAAC,QAAQ,CAAC;IAC5CR,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACP,CAAC;EAAA,IAAAQ,WAAA,GAEyBxB,UAAU,CAACE,cAAc,EAAEoB,YAAY,CAAC;IAAAG,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAA3DrB,KAAK,GAAAsB,YAAA;IAAEE,QAAQ,GAAAF,YAAA;EAEtBG,OAAO,CAACC,GAAG,CAAC1B,KAAK,CAACa,IAAI,CAAC;EAEvB,IAAMc,WAAW,GAAG;IACnB3B,KAAK,EAALA,KAAK;IACLwB,QAAQ,EAARA;EACD,CAAC;EAED,oBACC7B,KAAA,CAAAiC,aAAA,CAAC9B,aAAa,CAAC+B,QAAQ;IAACC,KAAK,EAAEH,WAAY;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzCnB,QAAQ,CACe;AAE3B,CAAC"},"metadata":{},"sourceType":"module"}